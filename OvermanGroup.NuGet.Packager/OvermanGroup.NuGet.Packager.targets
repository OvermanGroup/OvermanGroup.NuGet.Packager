<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

	<UsingTask TaskName="OvermanGroup.NuGet.Packager.Tasks.ResolveNuGetExePath" AssemblyFile="$(MSBuildThisFileDirectory).\OvermanGroup.NuGet.Packager.dll" />
	<UsingTask TaskName="OvermanGroup.NuGet.Packager.Tasks.CreateNuGetPackage" AssemblyFile="$(MSBuildThisFileDirectory).\OvermanGroup.NuGet.Packager.dll" />
	<UsingTask TaskName="OvermanGroup.NuGet.Packager.Tasks.PublishNuGetPackage" AssemblyFile="$(MSBuildThisFileDirectory).\OvermanGroup.NuGet.Packager.dll" />

	<PropertyGroup>
		<!--
			We use PrepareForRunDependsOn vs BuildDependsOn in order to leverage
			cleaning of the generated package files.
		-->
		<PrepareForRunDependsOn>
			$(PrepareForRunDependsOn);
			OverPack
		</PrepareForRunDependsOn>
	</PropertyGroup>

	<!--
		Changes to these MSBuild properties should be made either in the local
		'OvermanGroup.NuGet.Packager.props' file that was added to your project
		or in a TFS build definition.
	-->
	<PropertyGroup>
		<RunOverPack Condition="'$(RunOverPack)'==''">false</RunOverPack>

		<OverPackNuGetExePath Condition="'$(OverPackNuGetExePath)' == ''"></OverPackNuGetExePath>
		<OverPackInputFile Condition="'$(OverPackInputFile)' == ''">$(ProjectPath)</OverPackInputFile>
		<OverPackSolutionDir Condition="'$(OverPackSolutionDir)' == ''">$(SolutionDir)</OverPackSolutionDir>
		<OverPackProjectPath Condition="'$(OverPackProjectPath)' == ''">$(ProjectPath)</OverPackProjectPath>
		<OverPackOutputDirectory Condition="'$(OverPackOutputDirectory)' == ''">$(TargetDir)</OverPackOutputDirectory>
		<OverPackBasePath Condition="'$(OverPackBasePath)' == ''">$(TargetDir)</OverPackBasePath>
		<OverPackVersion Condition="'$(OverPackVersion)' == ''"></OverPackVersion>
		<OverPackExclude Condition="'$(OverPackExclude)' == ''"></OverPackExclude>
		<OverPackSymbols Condition="'$(OverPackSymbols)' == ''">false</OverPackSymbols>
		<OverPackTool Condition="'$(OverPackTool)' == ''">false</OverPackTool>
		<OverPackNoDefaultExcludes Condition="'$(OverPackNoDefaultExcludes)' == ''">false</OverPackNoDefaultExcludes>
		<OverPackNoPackageAnalysis Condition="'$(OverPackNoPackageAnalysis)' == ''">false</OverPackNoPackageAnalysis>
		<OverPackIncludeReferencedProjects Condition="'$(OverPackIncludeReferencedProjects)' == ''">false</OverPackIncludeReferencedProjects>
		<OverPackExcludeEmptyDirectories Condition="'$(OverPackExcludeEmptyDirectories)' == ''">false</OverPackExcludeEmptyDirectories>
		<OverPackVerbosity Condition="'$(OverPackVerbosity)' == ''">normal</OverPackVerbosity>
		<OverPackMinClientVersion Condition="'$(OverPackMinClientVersion)' == ''"></OverPackMinClientVersion>
		<OverPackExtraArguments Condition="'$(OverPackExtraArguments)' == ''"></OverPackExtraArguments>

		<OverPackPublishToFolder Condition="'$(OverPackPublishToFolder)' == '' and '$(TF_BUILD_BINARIESDIRECTORY)' != '' and Exists('$(TF_BUILD_BINARIESDIRECTORY)')">$(TF_BUILD_BINARIESDIRECTORY)</OverPackPublishToFolder>
		<OverPackPublishToHttp Condition="'$(OverPackPublishToHttp)' == ''"></OverPackPublishToHttp>
		<OverPackPublishApiKey Condition="'$(OverPackPublishApiKey)' == ''"></OverPackPublishApiKey>
		<OverPackPublishConfigFile Condition="'$(OverPackPublishConfigFile)' == ''"></OverPackPublishConfigFile>
		<OverPackPublishArguments Condition="'$(OverPackPublishArguments)' == ''"></OverPackPublishArguments>
	</PropertyGroup>

	<PropertyGroup>
		<OverPackDependsOn>
			BeforeOverPack;
			CoreOverPack;
			AfterOverPack
		</OverPackDependsOn>
	</PropertyGroup>

	<Target Name="OverPack" Condition="$(RunOverPack)" DependsOnTargets="$(OverPackDependsOn)" />

	<!-- Redefine this target in your project in order to run tasks just before OverPack -->
	<Target Name="BeforeOverPack" />

	<!-- Redefine this target in your project in order to run tasks just after OverPack -->
	<Target Name="AfterOverPack" />

	<Target Name="CoreOverPack">
		<PropertyGroup>
			<ErrorText>Cannot find the specified NuSpec file. The missing file is '{0}'.</ErrorText>
		</PropertyGroup>
		<Error Condition="!Exists('$(OverPackInputFile)')" Text="$([System.String]::Format('$(ErrorText)', '$(OverPackInputFile)'))" />

		<CreateNuGetPackage
			NuGetExePath="$(OverPackNuGetExePath)"
			SolutionDir="$(OverPackSolutionDir)"
			InputFile="$(OverPackInputFile)"
			OutputDirectory="$(OverPackOutputDirectory)"
			BasePath="$(OverPackBasePath)"
			Version="$(OverPackVersion)"
			Exclude="$(OverPackExclude)"
			Symbols="$(OverPackSymbols)"
			Tool="$(OverPackTool)"
			NoDefaultExcludes="$(OverPackNoDefaultExcludes)"
			NoPackageAnalysis="$(OverPackNoPackageAnalysis)"
			IncludeReferencedProjects="$(OverPackIncludeReferencedProjects)"
			ExcludeEmptyDirectories="$(OverPackExcludeEmptyDirectories)"
			Verbosity="$(OverPackVerbosity)"
			MinClientVersion="$(OverPackMinClientVersion)"
			ExtraArguments="$(OverPackExtraArguments)">
			<Output TaskParameter="PackageOutput" ItemName="OverPackOutputFile" />
			<Output TaskParameter="PackageSymbols" ItemName="OverPackSymbolsFile" />
			<Output TaskParameter="FilesWritten" ItemName="FileWrites" />
		</CreateNuGetPackage>

		<PublishNuGetPackage
			Condition="'$(OverPackPublishToFolder)' != ''"
			NuGetExePath="$(OverPackNuGetExePath)"
			SolutionDir="$(OverPackSolutionDir)"
			PackagePath="@(OverPackOutputFile)"
			Source="$(OverPackPublishToFolder)"
			ApiKey="$(OverPackPublishApiKey)"
			Verbosity="$(OverPackVerbosity)"
			ConfigFile="$(OverPackPublishConfigFile)"
			PushArguments="$(OverPackPublishArguments)"
		/>

		<PublishNuGetPackage
			Condition="'$(OverPackPublishToHttp)' != ''"
			NuGetExePath="$(OverPackNuGetExePath)"
			SolutionDir="$(OverPackSolutionDir)"
			PackagePath="@(OverPackOutputFile)"
			Source="$(OverPackPublishToHttp)"
			ApiKey="$(OverPackPublishApiKey)"
			Verbosity="$(OverPackVerbosity)"
			ConfigFile="$(OverPackPublishConfigFile)"
			PushArguments="$(OverPackPublishArguments)"
		/>
	</Target>

</Project>
